- TakesScreenshot ts = (TakesScreenshot) driver;
  ts will get the implementation for its method from RemoteWebDriver class
- ts.getScreenshotAs() method could return you either a byte array or actual file
  (it has the ability to store the screenshot as both types)

- several notes made inside screenshot methods in CommonMethods class

- instead of going to SmokeRunner class to run the test directly,
  we added a plugin in our pom.xml that allows us to run the class in a
  different way. (maven tab on the top right --> Project --> Lifecycle --> test)
    - if we wanted to add more runner classes, in the pom.xml plugin in <includes> tag,
      we can add it there

- in @CucumberOptions we added "rerun:target/failed.txt" which will add all the test cases that
  failed in the previous run to a falied.txt file inside target folder.
- we created a new runner class that will execute only the test cases that have failed

- sidenote: Jenkins only needs to know pom.xml location so it can run the tests
  (we have not used Jenkins so far)

Logs
    - must be implemented and we have to add dependencies
    - someone asks: how do you implement logs on your project?
        - A: you have to implement it through pom.xml and add it as a dependency
          then reload your project
    - after implementing, add a file into Project called log4j.xml and then copy and
      paste code

Maven Lifecycle
    - core of maven and consists of several phases
    - (these can be viewed when you click maven on top right corner)

    - clean: removes all files generated by previous build (removes target folder)
    - validate: checks project is correct and all necessary information is available
    - compile: compiles the source code for the project
    - test: runs the tests for the project (This project has a plugin 'surefire' that runs SmokeRunner when you click test)
    - package: it packages the compiled code into a distributable format, such as JAR or WAR files
        - WAR files have JAR files inside it
    - verify: runs and checks on result of integration tests to ensure quality criteria is met
    - install: installs the packages into local repository
    - site: generates documentation for the project (for developer mostly)
    - deploy: copies the final package to remote repository for sharing with other developers or projects

- we can also run testcases from the console rather than IDE by:
    - first, must install maven to your system
        - refer to last 30 min of class 8
    - copy the absolute path to project, go to command prompt
    - type: cd (path)
    - type: mvn test
    -


- side note: which folder on your computer contains all dependencies that you've added?
  A: go to C drive, users, (the name of laptop), .m2 folder
